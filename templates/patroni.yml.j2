scope: postgres
namespace: /db/
name: {{ hostname }}

restapi:
    listen: {{ hostvars[inventory_hostname]['ansible_' + patroni_interface].ipv4.address }}:8008
    connect_address: {{ hostvars[inventory_hostname]['ansible_' + patroni_interface].ipv4.address }}:8008

etcd3:
    host: {{ virtual_ip_etcd }}:12379
    protocol: https
    cacert: /etc/patroni/ca.crt
    cert: /etc/patroni/server.crt
    key: /etc/patroni/server.key

bootstrap:
    dcs:
        ttl: 30
        loop_wait: 10
        retry_timeout: 10
        maximum_lag_on_failover: 1048576
        postgresql:
            use_pg_rewind: true

    initdb:
    - encoding: UTF8
    - data-checksums

    pg_hba:
    - host replication replicator 127.0.0.1/32 md5
    {% for item in groups[inventory_groupname] %}
    - host replication replicator {{ hostvars[item]['ansible_' + patroni_interface].ipv4.address }}/0 md5
    {% endfor %}
    - host all all 0.0.0.0/0 md5

    users:
        admin:
            password: admin
            options:
                - createrole
                - createdb

postgresql:
    listen: {{ hostvars[inventory_hostname]['ansible_' + patroni_interface].ipv4.address }}:5432
    connect_address: {{ hostvars[inventory_hostname]['ansible_' + patroni_interface].ipv4.address }}:5432
    data_dir: /data/patroni
    pgpass: /tmp/pgpass
    authentication:
        replication:
            username: replicator
            password: postgresql_replicator_password
        superuser:
            username: postgres
            password: postgresql_superuser_password
    parameters:
        unix_socket_directories: '.'

tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false